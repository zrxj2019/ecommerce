# Generated by Django 2.1.5 on 2020-02-25 17:25

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('chapterid', models.AutoField(primary_key=True, serialize=False)),
                ('chaptername', models.CharField(default=None, max_length=60)),
                ('content', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=600)),
                ('time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('experimentid', models.AutoField(primary_key=True, serialize=False)),
                ('experimentname', models.CharField(max_length=200)),
                ('content', models.TextField(null=True)),
                ('experimentdeadline', models.DateField(default=django.utils.timezone.now)),
                ('experimentstatus', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notificationid', models.AutoField(primary_key=True, serialize=False)),
                ('read', models.BooleanField(default=False)),
                ('content', models.CharField(max_length=600)),
                ('time', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Online',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Pathlist',
            fields=[
                ('pathlistid', models.AutoField(primary_key=True, serialize=False)),
                ('path', models.CharField(max_length=200)),
                ('type', models.IntegerField(choices=[(0, 'ppt'), (1, 'jpg'), (2, 'url')])),
            ],
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('questionid', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=600)),
                ('a', models.CharField(max_length=200)),
                ('b', models.CharField(max_length=200)),
                ('c', models.CharField(max_length=200)),
                ('d', models.CharField(max_length=200)),
                ('questionType', models.IntegerField()),
                ('answer', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionRecord',
            fields=[
                ('recordid', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=200, null=True)),
                ('istrue', models.IntegerField(null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('sectionid', models.AutoField(primary_key=True, serialize=False)),
                ('sectionname', models.CharField(default=None, max_length=60)),
                ('content', models.TextField(null=True)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Chapter')),
            ],
        ),
        migrations.CreateModel(
            name='SectionQuestion',
            fields=[
                ('questionid', models.AutoField(primary_key=True, serialize=False)),
                ('questiontitle', models.TextField()),
                ('content', models.TextField()),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Section')),
            ],
        ),
        migrations.CreateModel(
            name='SectionSimulation',
            fields=[
                ('simulationid', models.AutoField(primary_key=True, serialize=False)),
                ('simulationtype', models.IntegerField()),
                ('simulationtitle', models.TextField()),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Section')),
            ],
        ),
        migrations.CreateModel(
            name='SectionSimulationAnswer',
            fields=[
                ('answerid', models.AutoField(primary_key=True, serialize=False)),
                ('answertitle', models.TextField()),
                ('content', models.TextField()),
                ('sectionsimulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.SectionSimulation')),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_avg', models.FloatField()),
                ('studentnum', models.IntegerField()),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Section')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('studentid', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('password', models.CharField(default=None, max_length=45)),
                ('studentname', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacherid', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('teachername', models.CharField(max_length=45)),
                ('password', models.CharField(default=None, max_length=45)),
                ('department', models.CharField(max_length=45, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('testid', models.AutoField(primary_key=True, serialize=False)),
                ('testname', models.CharField(max_length=200)),
                ('testtime', models.IntegerField()),
                ('state', models.IntegerField()),
                ('xznum', models.IntegerField()),
                ('dxnum', models.IntegerField()),
                ('pdnum', models.IntegerField()),
                ('testscore', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TestRecord',
            fields=[
                ('recordid', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.CharField(max_length=200, null=True)),
                ('duration', models.CharField(max_length=200, null=True)),
                ('state', models.IntegerField()),
                ('score', models.IntegerField(null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Student')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Test')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('topicid', models.AutoField(primary_key=True, serialize=False)),
                ('topicname', models.CharField(default=None, max_length=60)),
                ('content', models.TextField(null=True)),
                ('topictype', models.IntegerField(choices=[(0, 'normal'), (1, 'media')], default=0)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Section')),
                ('students', models.ManyToManyField(through='ecommerceweb.Progress', to='ecommerceweb.Student')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('username', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(default=None, max_length=45)),
                ('role', models.IntegerField(choices=[(0, 'teacher'), (1, 'student')])),
            ],
        ),
        migrations.AddField(
            model_name='statistic',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Teacher'),
        ),
        migrations.AddField(
            model_name='section',
            name='teachers',
            field=models.ManyToManyField(through='ecommerceweb.Statistic', to='ecommerceweb.Teacher'),
        ),
        migrations.AddField(
            model_name='questionrecord',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Student'),
        ),
        migrations.AddField(
            model_name='questionrecord',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Test'),
        ),
        migrations.AddField(
            model_name='progress',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studied_topics', to='ecommerceweb.Student'),
        ),
        migrations.AddField(
            model_name='progress',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Topic'),
        ),
        migrations.AddField(
            model_name='pathlist',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Topic'),
        ),
        migrations.AddField(
            model_name='notification',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Student'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='student',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Student'),
        ),
        migrations.AddField(
            model_name='comment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Student'),
        ),
        migrations.AddField(
            model_name='comment',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Teacher'),
        ),
        migrations.AddField(
            model_name='comment',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerceweb.Topic'),
        ),
        migrations.AlterUniqueTogether(
            name='statistic',
            unique_together={('teacher', 'section')},
        ),
        migrations.AlterUniqueTogether(
            name='progress',
            unique_together={('student', 'topic')},
        ),
    ]
